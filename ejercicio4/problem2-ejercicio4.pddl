(define (problem problem-ejercicio4)
    (:domain ejercicio4)  
    (:objects
        truck motorbike car - vehicle
        warehouse a b c d e - place
        p1 p2 p3 p4 p5 p6 - package

    )
    (:init
    (= (total_fuel_used truck) 0)
    (= (total_fuel_used car) 0)
    (= (total_fuel_used motorbike) 0)
    (not_is_loading p1)
    (not_is_loading p2)
    (not_is_loading p3)
    (not_is_loading p4)
    (not_is_loading p5)
    (not_is_loading p6)
    (not_is_recharging truck)
    (not_is_recharging motorbike)
    (not_is_recharging car)
    (package_on_place p1 warehouse)
    (package_on_place p2 warehouse)
    (package_on_place p3 warehouse)
    (package_on_place p4 warehouse)
    (package_on_place p5 warehouse)
    (package_on_place p6 warehouse)
    (vehicle_on_place truck warehouse)
    (vehicle_on_place motorbike warehouse)
    (vehicle_on_place car warehouse)
    (= (time_required p1) 3)
    (= (time_required p2) 5)
    (= (time_required p3) 1)
    (= (time_required p4) 8)
    (= (time_required p5) 2)
    (= (time_required p6) 6)
    (= (space truck) 3)
    (= (space motorbike) 1)
    (= (space car) 2) 
    (= (speed truck) 1)
    (= (speed car) 2)
    (= (speed motorbike) 3)
    (= (distance warehouse a) 5)
    (= (distance warehouse b) 10)
    (= (distance warehouse c) 15)
    (= (distance warehouse d) 20)
    (= (distance warehouse e) 25)
    (= (distance a b) 5)
    (= (distance a warehouse) 5)
    (= (distance a c) 10)
    (= (distance a d) 15)
    (= (distance a e) 20)
    (= (distance b a) 5)
    (= (distance b warehouse) 10)
    (= (distance b c) 5)
    (= (distance b d) 10)
    (= (distance b e) 15)
    (= (distance c a) 10)
    (= (distance c b) 5)
    (= (distance c warehouse) 15)
    (= (distance c d) 5)
    (= (distance c e) 10)
    (= (distance d warehouse) 20)
    (= (distance d a) 15)
    (= (distance d b) 10)
    (= (distance d c) 5)
    (= (distance d e) 5)
    (= (distance e warehouse) 25)
    (= (distance e a) 20)
    (= (distance e b) 15)
    (= (distance e c) 10)
    (= (distance e d) 5)
    (= (fuel_level truck) 40)
    (= (fuel_level motorbike) 20)
    (= (fuel_level car) 30)
    (= (max_fuel_level truck) 40)
    (= (max_fuel_level motorbike) 20)
    (= (max_fuel_level car) 20)
    )
    (:goal (and 
	(package_on_place p1 a)
    (package_on_place p2 b)
    (package_on_place p3 a)
    (package_on_place p4 c)
    (package_on_place p5 e)
    (package_on_place p6 d)
	))

(:metric minimize (+ (total_fuel_used truck) (total_fuel_used motorbike)(total_fuel_used car)))

)
